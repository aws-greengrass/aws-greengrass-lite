name: Raspberry Pi OS aarch64 - Build deb packages and zip files
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        build_type: [RelWithDebInfo, MinSizeRel]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Cache Podman image
        uses: actions/cache@v4
        with:
          path: |
            ~/podman-raspios-image.tar
          key:
            ${{ runner.os }}-podman-raspios-${{
            hashFiles('misc/buildtestcontainer/*') }}

      - name: Create Pi-compatible Containerfile
        run: |
          cat > Containerfile.pi << 'EOF'
          FROM arm64v8/debian:bookworm
          ARG DEBIAN_FRONTEND=noninteractive

          RUN apt-get update \
            && apt-get -y install --no-install-recommends \
              systemd systemd-sysv dbus ca-certificates sudo nano bash-completion \
              build-essential pkg-config cmake git curl file gdb python3 \
              libssl-dev libcurl4-openssl-dev libsqlite3-dev sqlite3 libyaml-dev \
              libsystemd-dev liburiparser-dev uuid-dev libevent-dev cgroup-tools libzip-dev \
            && apt-get clean

          COPY ./getty-override.conf \
            /etc/systemd/system/console-getty.service.d/override.conf

          RUN echo "export MAKEFLAGS=-j" >> /root/.profile

          CMD ["/lib/systemd/systemd"]
          EOF

      - name: Build and save container for Raspberry Pi OS
        run: |
          if [ ! -f ~/podman-raspios-image.tar ]; then
            podman build -f Containerfile.pi --arch=arm64 misc/buildtestcontainer -t raspios-container
            podman save raspios-container:latest > ~/podman-raspios-image.tar
          else
            podman load < ~/podman-raspios-image.tar
          fi

      - name: Run build in container
        shell: bash
        run: |
          podman run -v $PWD/.:/aws-greengrass-lite --replace --name ggl raspios-container:latest bash -c "\
            cd /aws-greengrass-lite && \
            rm -rf build/ && \
            cmake -B build \
            -DGGL_LOG_LEVEL=DEBUG \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_FIND_DEBUG_MODE=ON \
            -DGGL_SYSTEMD_SYSTEM_USER=ggcore \
            -DGGL_SYSTEMD_SYSTEM_GROUP=ggcore  \
            -DGGL_SYSTEMD_SYSTEM_DIR=/lib/systemd/system \
            -DCMAKE_INSTALL_PREFIX=/usr && \
            make -C build -j$(nproc) && \
            cd build && cpack -v -G DEB && cd - \
            "

      - name: Save package
        run: |
          mkdir ${{ github.workspace }}/zipfile/
          cp ${{ github.workspace }}/build/*.deb ${{ github.workspace }}/zipfile/

      - name: Generate readme / install file
        run: |
          cat ${{ github.workspace }}/.github/workflows/packaging/readme.template.txt >> ${{ github.workspace }}/zipfile/readme.txt
          cp ${{ github.workspace }}/.github/workflows/packaging/install-greengrass-lite.sh ${{ github.workspace }}/zipfile/
          sed -i 's|{{ VERSION_LINK }}|${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|g' ${{ github.workspace }}/zipfile/readme.txt
          sed -i 's|{{ UBUNTU_VERSION }}|raspios|g' ${{ github.workspace }}/zipfile/install-greengrass-lite.sh
          cat ${{ github.workspace }}/LICENSE >> ${{ github.workspace }}/zipfile/readme.txt

      - name: md5sums
        run: |
          md5sum ${{ github.workspace }}/zipfile/*

      - name: Save package
        uses: actions/upload-artifact@v4
        with:
          name: aws-greengrass-lite-raspios-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/zipfile/*
          retention-days: 1

      - name:
          Save arm64 package without build type - default package to download
        if: matrix.build_type  == 'MinSizeRel'
        uses: actions/upload-artifact@v4
        with:
          name: aws-greengrass-lite-raspios-arm64
          path: |
            ${{ github.workspace }}/zipfile/*
          retention-days: 1
