name: Build

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        build_type: [Debug]
        cpp_compiler: [g++, clang++, msvc]
        include:
          - os: windows-latest
            c_compiler: msvc
            cpp_compiler: msvc
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-20.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-20.04
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            cpp_compiler: clang++
          - os: ubuntu-20.04
            cpp_compiler: msvc
          - os: macos-latest
            cpp_compiler: g++
          - os: macos-latest
            cpp_compiler: msvc

    steps:
      - name: Clone the repo
        uses: actions/checkout@v3

      - name: Install dependencies
        if: matrix.os == 'windows-latest' && matrix.cpp_compiler == 'msvc'
        run: |
          choco install winget
          winget install -e --id Microsoft.VisualStudio.2022.BuildTools --accept-package-agreements --accept-package-agreements --override "--passive --wait --add Microsoft.VisualStudio.Workload.VCTools;includeRecommended"

      - name: Configure CMake
        shell: bash
        run: |
          if [[ "${{matrix.os}}" == "windows-latest" && "${{matrix.cpp_compiler}}" == "g++" ]]; then
            choco install mingw
            cmake -B build -DCMAKE_C_COMPILER=${{matrix.c_compiler}} -DCMAKE_CXX_COMPILER=${{matrix.cpp_compiler}} \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -S . -G "MinGW Makefiles"
          elif [[ "${{matrix.os}}" == "windows-latest" ]]; then
            cmake -B build -DCMAKE_C_COMPILER=${{matrix.c_compiler}} -DCMAKE_CXX_COMPILER=${{matrix.cpp_compiler}} \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -S . -G "Visual Studio 17 2022"
          else
            cmake -B build -DCMAKE_C_COMPILER=${{matrix.c_compiler}} -DCMAKE_CXX_COMPILER=${{matrix.cpp_compiler}} \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -S .
          fi

      - name: Build
        run:
          cmake --build ${{ github.workspace }}/build --config ${{
          matrix.build_type }}

      - name: Run Tests
        working-directory: ${{ github.workspace }}/build
        run: ./nucleus/nucleus-tests
